1. What are the major features in different versions of Spring Framework?
Features of Spring Framework
Version	Logo	Feature
Spring 2.5	spring 2.5 logo - Spring Interview Questions - Edureka!	This version was released in 2007. It was the first version which supported annotations.
Spring 3.0	spring 3.0 logo - Spring Interview Questions - Edureka!	This version was released in 2009. It made full-fledged use of improvements in Java5 and also provided support to JEE6.
Spring 4.0	Spring 4.0 logo - Spring Interview Questions - Edureka!	 This version was released in 2013. This was the first version to provide full support to Java 8.

2. What is a Spring Framework?
Spring logo - Spring Interview Questions - Edureka!Spring is a powerful open source, application framework created to reduce the complexity of enterprise application development.
It is light-weighted and loosely coupled.
It has layered architecture, which allows you to select the components to use, while also providing a cohesive framework for J2EE application development.
Spring framework is also called the framework of frameworks as it provides support to various other frameworks such as Struts, Hibernate, Tapestry, EJB, JSF etc.

3. List the advantages of Spring Framework.
Because of Spring Frameworks layered architecture, you can use what you need and leave which you don’t.
Spring Framework enables POJO (Plain Old Java Object) Programming which in turn enables continuous integration and testability.
JDBC is simplified due to Dependency Injection and Inversion of Control.
It is open-source and has no vendor lock-in.

4. What are the different features of Spring Framework?
Following are some of the major features of Spring Framework :

Lightweight: Spring is lightweight when it comes to size and transparency. 
Inversion of control (IOC): The objects give their dependencies instead of creating or looking for dependent objects. This is called Inversion Of Control.
Aspect oriented Programming (AOP): Aspect oriented programming in Spring supports cohesive development by separating application business logic from system services.
Container: Spring Framework creates and manages the life cycle and configuration of the application objects.
MVC Framework: Spring Framework’s MVC web application framework is highly configurable. Other frameworks can also be used easily instead of Spring MVC Framework.
Transaction Management: Generic abstraction layer for transaction management is provided by the Spring Framework. Spring’s transaction support can be also used in container less environments.
JDBC Exception Handling: The JDBC abstraction layer of the Spring offers an exception hierarchy, which simplifies the error handling strategy.
